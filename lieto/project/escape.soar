# enable RL
rl --set learning on
# use epsilon-greedy decision making
indifferent-selection --epsilon-greedy
indifferent-selection --stats
# 10% deviation from greedy
indifferent-selection --epsilon 0.1



##################
### Initialize ###
##################
sp {propose*initialize*escape
    (state <s> ^superstate nil -^name)
-->
    (<s> ^operator <o> +)
    (<o> ^name initialize-escape)
}

sp {apply*initialize*escape
    (state <s> ^operator.name initialize-escape)
-->
    (<s> ^name escape 
         ^previous <p>
         ^created-slingshot false
         ^broken-window false
         ^first-log-in-place false
         ^created-ladder false
         ^holding-log false
         ^escaped false)
    (<p> ^name none)
    (write (crlf) |Inizia il gioco!|)
}



#############################
### Possible combinations ###
#############################
# twig + spring = slingshot
sp {propose*combine-twig-spring
    (state <s> ^name escape ^previous <previous-action> ^created-slingshot false ^broken-window false)
    (<previous-action> ^name <> combine-twig-spring)
-->
    (<s> ^operator <o> +)
    (<o> ^name combine-twig-spring)
}

sp {apply*combine-twig-spring
    (state <s> ^operator.name combine-twig-spring ^previous <p>)
-->
    (<s> ^previous <p> - <new-previous-action> +)
    (<new-previous-action> ^name combine-twig-spring ^reward 1)
    (<s> ^created-slingshot false - true +)
    (write (crlf) |Ha combinato il rametto con la molla e creato una fionda!|)
}

# twig + rock = nothing
sp {propose*combine-rock-twig
    (state <s> ^name escape ^previous <previous-action> ^created-slingshot false ^broken-window false)
    (<previous-action> ^name <> combine-rock-twig)
-->
    (<s> ^operator <o> +)
    (<o> ^name combine-rock-twig)
}

sp {apply*combine-rock-twig
    (state <s> ^operator.name combine-rock-twig ^previous <p>)
-->
    (<s> ^previous <p> - <new-previous-action> +)
    (<new-previous-action> ^name combine-rock-twig ^reward -1)
    (write (crlf) |Ha combinato il rametto con la pietra senza ottenere nulla.|)
}

# rock + spring = nothing
sp {propose*combine-rock-spring
    (state <s> ^name escape ^previous <previous-action> ^created-slingshot false ^broken-window false)
    (<previous-action> ^name <> combine-rock-spring)
-->
    (<s> ^operator <o> +)
    (<o> ^name combine-rock-spring)
}

sp {apply*combine-rock-spring
    (state <s> ^operator.name combine-rock-spring ^previous <p>)
-->
    (<s> ^previous <p> - <new-previous-action> +)
    (<new-previous-action> ^name combine-rock-spring ^reward -1)
    (write (crlf) |Ha combinato la pietra con la molla senza ottenere nulla.|)
}



#########################################
### Possible shoots without slingshot ###
#########################################
# shooting the window with a rock
sp {propose*shoot-with-rock
    (state <s> ^name escape ^previous <previous-action> ^created-slingshot false ^broken-window false)
    (<previous-action> ^name <> shoot-with-rock)
-->
    (<s> ^operator <o> +)
    (<o> ^name shoot-with-rock)
}

sp {apply*shoot-with-rock
    (state <s> ^operator.name shoot-with-rock ^previous <p>)
-->
    (<s> ^previous <p> - <new-previous-action> +)
    (<new-previous-action> ^name shoot-with-rock ^reward -1)
    (write (crlf) |Ha lanciato una pietra alla finestra senza romperla.|)
}

# shooting the window with a twig
sp {propose*shoot-with-twig
    (state <s> ^name escape ^previous <previous-action> ^created-slingshot false ^broken-window false)
    (<previous-action> ^name <> shoot-with-twig)
-->
    (<s> ^operator <o> +)
    (<o> ^name shoot-with-twig)
}

sp {apply*shoot-with-twig
    (state <s> ^operator.name shoot-with-twig ^previous <p>)
-->
    (<s> ^previous <p> - <new-previous-action> +)
    (<new-previous-action> ^name shoot-with-twig ^reward -1)
    (write (crlf) |Ha lanciato un rametto alla finestra senza romperla.|)
}

# try to throw a log
sp {propose*throw-log
    (state <s> ^name escape ^previous <previous-action> ^created-slingshot false ^broken-window false)
    (<previous-action> ^name <> throw-log)
-->
    (<s> ^operator <o> +)
    (<o> ^name throw-log)
}

sp {apply*throw-log
    (state <s> ^operator.name throw-log ^previous <p>)
-->
    (<s> ^previous <p> - <new-previous-action> +)
    (<new-previous-action> ^name throw-log ^reward -1)
    (write (crlf) |Non riesce a lanciare il tronco, è troppo pesante. Riesce solo a spostarlo.|)
}



######################################
### Possible shoots with slingshot ###
######################################
# shooting on the center without breaking the window
sp {propose*shoot-center
    (state <s> ^name escape ^previous <previous-action> ^created-slingshot true ^broken-window false)
    (<previous-action> ^name <> shoot-center)
-->
    (<s> ^operator <o> +)
    (<o> ^name shoot-center)
}

sp {apply*shoot-center
    (state <s> ^operator.name shoot-center ^previous <p>)
-->
    (<s> ^previous <p> - <new-previous-action> +)
    (<new-previous-action> ^name shoot-center ^reward -1)
    (write (crlf) |Ha sparato al centro senza rompere la finestra.|)
}

# shooting on the edge and breaking the window
sp {propose*shoot-edge
    (state <s> ^name escape ^previous <previous-action> ^created-slingshot true ^broken-window false)
    (<previous-action> ^name <> shoot-edge)
-->
    (<s> ^operator <o> +)
    (<o> ^name shoot-edge)
}

sp {apply*shoot-edge
    (state <s> ^operator.name shoot-edge ^previous <p>)
-->
    (<s> ^previous <p> - <new-previous-action> +)
    (<new-previous-action> ^name shoot-edge ^reward 1)
    (<s> ^broken-window false - true +)
    (write (crlf) |Ha sparato al bordo e rotto la finestra!|)
}



#######################
### Picking up logs ###
#######################
sp {propose*pick-up-log
    (state <s> ^name escape ^previous <previous-action> ^created-ladder false ^holding-log false ^broken-window true)
    (<previous-action> ^name <> pick-up-log)
-->
    (<s> ^operator <o> +)
    (<o> ^name pick-up-log)
}

sp {apply*pick-up-log
    (state <s> ^operator.name pick-up-log ^previous <p>)
-->
    (<s> ^previous <p> - <new-previous-action> +)
    (<new-previous-action> ^name pick-up-log)
    (<s> ^holding-log false - true +)
    (write (crlf) |Ha raccolto un tronco.|)
}



###################################
### Building ladder with 2 logs ###
###################################
sp {propose*move-first-log
    (state <s> ^name escape ^previous <previous-action> ^first-log-in-place false ^holding-log true)
    (<previous-action> ^name <> move-first-log)
-->
    (<s> ^operator <o> +)
    (<o> ^name move-first-log)
}

sp {apply*move-first-log
    (state <s> ^operator.name move-first-log ^previous <p>)
-->
    (<s> ^previous <p> - <new-previous-action> +)
    (<new-previous-action> ^name move-first-log)
    (<s> ^first-log-in-place false - true +)
    (<s> ^holding-log true - false +)
    (write (crlf) |Ha spostato il primo tronco sotto la finestra!|)
}

sp {propose*move-second-log
    (state <s> ^name escape ^previous <previous-action> ^first-log-in-place true ^created-ladder false ^holding-log true)
    (<previous-action> ^name <> move-second-log)
-->
    (<s> ^operator <o> +)
    (<o> ^name move-second-log)
}

sp {apply*move-second-log
    (state <s> ^operator.name move-second-log ^previous <p>)
-->
    (<s> ^previous <p> - <new-previous-action> +)
    (<new-previous-action> ^name move-second-log)
    (<s> ^holding-log true - false +)
    (<s> ^created-ladder false - true +)
    (write (crlf) |Ha spostato il secondo tronco sotto la finestra e ha costruito una scala!|)
}



###############################
### Climb ladder and escape ###
###############################
sp {propose*climb-ladder
    (state <s> ^name escape ^previous <previous-action> ^created-ladder true)
    (<previous-action> ^name <> climb-ladder)
-->
    (<s> ^operator <o> +)
    (<o> ^name climb-ladder)
}

sp {apply*climb-ladder
    (state <s> ^operator.name climb-ladder ^previous <p> ^escaped false)
-->
    (<s> ^previous <p> - <new-previous-action> +)
    (<new-previous-action> ^name climb-ladder)
    (<s> ^escaped false - true +)
    (write (crlf) |Ha scalato la scala ed è scappato!|)
}



##############################
### Reinforcement learning ###
##############################
sp {rl*combine-twig-spring
    (state <s> ^name escape ^operator <o> +)
    (<o> ^name combine-twig-spring)
-->
    (<s> ^operator <o> = 0)
}

sp {rl*combine-rock-twig
    (state <s> ^name escape ^operator <o> +)
    (<o> ^name combine-rock-twig)
-->
    (<s> ^operator <o> = 0)
}

sp {rl*combine-rock-spring
    (state <s> ^name escape ^operator <o> +)
    (<o> ^name combine-rock-spring)
-->
    (<s> ^operator <o> = 0)
}

sp {rl*shoot-center
    (state <s> ^name escape ^operator <o> +)
    (<o> ^name shoot-center)
-->
    (<s> ^operator <o> = 0)
}

sp {rl*shoot-edge
    (state <s> ^name escape ^operator <o> +)
    (<o> ^name shoot-edge)
-->
    (<s> ^operator <o> = 0)
}

sp {rl*shoot-rock
    (state <s> ^name escape ^operator <o> +)
    (<o> ^name shoot-with-rock)
-->
    (<s> ^operator <o> = 0)
}

sp {rl*shoot-twig
    (state <s> ^name escape ^operator <o> +)
    (<o> ^name shoot-with-twig)
-->
    (<s> ^operator <o> = 0)
}

sp {rl*throw-log
    (state <s> ^name escape ^operator <o> +)
    (<o> ^name throw-log)
-->
    (<s> ^operator <o> = 0)
}



############################################
### Reinforcement learning apply rewards ###
############################################
sp {rl*apply-rewards
    (state <s> ^name escape ^reward-link <r> ^previous <previous-action>)
    (<previous-action> ^reward <reward>)
-->
    (<r> ^reward <rr>)
    (<rr> ^value <reward>)
    (write (crlf) |Reward: | <reward>)
}



################################
### Escape and halt the game ###
################################
sp {halt*escape
    (state <s> ^name escape ^escaped true)
-->
    (write (crlf) |Fine del gioco!|)
    (halt)
}